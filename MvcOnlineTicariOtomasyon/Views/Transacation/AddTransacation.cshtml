@model MvcOnlineTicariOtomasyon.Models.Classes.Transaction
@{
    ViewBag.Title = "AddTransacation";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    #salesTable {
        display: none; /* Tabloyu gizle */
    }
</style>

<div class="row">
    <div class="col-md-12">
        <br />
        <h2>Satış Oluştur</h2>
        <form class="form-group" method="post">
            <div class="row">
                <div class="col-md-6">
                    <label>Cari</label>
                    @Html.DropDownListFor(x => x.Currentid, (List<SelectListItem>)ViewBag.Current, "Seçiniz", new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <label>Müşteri Temsilcisi</label>
                    @Html.DropDownListFor(x => x.Employeeid, (List<SelectListItem>)ViewBag.Employee, "Seçiniz", new { @class = "form-control" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <label for="date">Tarih</label>
                    <input type="date" id="date" name="date" class="form-control">
                </div>
                <div class="col-md-6">
                    <label>Ürün</label>
                    @Html.DropDownListFor(x => x.Productid, (List<SelectListItem>)ViewBag.Product, "Seçiniz", new { @class = "form-control" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <label>Fiyat</label>
                    @Html.HiddenFor(X => X.Price, new { @id = "hiddenPrice" })
                    @Html.TextBoxFor(X => X.Price, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <label>Miktar</label>
                    @Html.TextBoxFor(X => X.Amount, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <label>Toplam Fiyat</label>
                    @Html.HiddenFor(X => X.TotalPrice, new { @id = "hiddenTotalPrice" }) <!-- Gizli alan -->
                    @Html.TextBoxFor(X => X.TotalPrice, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <br />
                <div class="col-md-6">

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <button id="add" class="btn btn-outline-warning" type="button">Ekle</button>
                    <a class="btn btn-danger" href="~/Transacation/Index">Cancel</a>
                </div>
                <br />

                <div class="col-md-12">
                    <br />
                    <table id="salesTable" class="table">
                        <thead>
                            <tr>
                                <th>Cari</th>
                                <th>Müşteri Temsilcisi</th>
                                <th>Tarih</th>
                                <th>Ürün</th>
                                <th>Fiyat</th>
                                <th>Miktar</th>
                                <th>Toplam Fiyat</th>
                                <th>Sil</th>
                            </tr>
                        </thead>
                        <tbody id="salesTableBody">
                            <!-- Tablo satırları burada dinamik olarak eklenecek -->
                        </tbody>
                    </table>
                </div>
                
                    <div class="col-md-6"><button class="btn btn-outline-success" id="submit" >Sipariş Oluştur </button></div>
                    <div class="col-md-6"></div>
                
            </div>
            
        </form>
    </div>
</div>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<script>
    $(function () {
        $('#submit').hide();
    // Ürün dropdown listesinden seçim değiştiğinde bu fonksiyon çalışacak
    $('#Productid').change(function () {
        // Seçilen ürünün id'sini al
        var selectedProductId = $(this).val();
        $('#Amount').val('');
        $('#TotalPrice').val('');
        // Ajax isteği ile seçilen ürünün fiyatını getir
        $.ajax({
            url: '@Url.Action("GetProductPrice", "Transacation")', // Controller'da GetProductPrice adında bir Action oluşturun
            type: 'GET',
            dataType: 'json',
            data: { productId: selectedProductId },
            success: function (data) {
                // Başarılı olduğunda fiyat alanına fiyatı yaz
                var formattedPrice = data.price.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                $('#Price').val(formattedPrice);
                $('#hiddenPrice').val(data.price); // Burada #Price, fiyatın yazılacağı textbox'ın id'si olmalı
            },

        });
    });
    $('#Price, #Amount').on('input', function () {
        // Fiyatı ve miktarı al
        var price = parseFloat($('#hiddenPrice').val()) || 0;
        var amount = parseFloat($('#Amount').val()) || 0;
        // Toplam fiyatı hesapla ve TotalPrice alanına yaz
        var totalPrice = (price * amount).toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
        $('#TotalPrice').val(totalPrice);

        $('#hiddenTotalPrice').val((price * amount).toFixed(0));
    });

    $('#add').click(function () {
        $('#salesTable').show(); // Tabloyu göster
        $('#submit').show();
        var cari = $('#Currentid option:selected').text();
        var musteriTemsilcisi = $('#Employeeid option:selected').text();
        var tarih = $('#date').val();
        var urun = $('#Productid option:selected').text();
        var fiyat = $('#Price').val();
        var miktar = $('#Amount').val();
        var toplamFiyat = $('#TotalPrice').val();

        // Tabloya yeni bir satır ekleyin
        $('#salesTableBody').append('<tr>' +
            '<td>' + cari + '</td>' +
            '<td>' + musteriTemsilcisi + '</td>' +
            '<td>' + tarih + '</td>' +
            '<td>' + urun + '</td>' +
            '<td>' + fiyat + '</td>' +
            '<td>' + miktar + '</td>' +
            '<td>' + toplamFiyat + '</td>' +
            '<td><button class="btn btn-danger delete-row">Sil</button></td>' + // Silme butonu ekle
            '</tr>');
    });
        function adjustTableVisibility() {
            var rowCount = $('#salesTableBody tr').length; // Tablodaki satır sayısını al

            // Eğer tabloda satır yoksa, tabloyu gizle; aksi takdirde tabloyu göster
            if (rowCount == 0) {
                $('#salesTable').hide();
                $('#submit').hide();
               
            } else {
                $('#salesTable').show();
            }
        }
        adjustTableVisibility();


    // Satır silme işlemi
    $('#salesTableBody').on('click', '.delete-row', function () {
        $(this).closest('tr').remove(); // Tıklanan satırı tablodan kaldır
        adjustTableVisibility();
    });

    var currentDate = new Date(); // Şu anki tarih ve zamanı al
    var day = currentDate.getDate(); // Günü al
    var month = currentDate.getMonth() + 1; // Ayı al (0'dan başladığı için 1 ekleyin)
    var year = currentDate.getFullYear(); // Yılı al

    // Tarihi "yyyy-MM-dd" formatına dönüştür
    var formattedDate = year + '-' + (month < 10 ? '0' + month : month) + '-' + (day < 10 ? '0' + day : day);

        $('#date').val(formattedDate);

   
});
</script>